//!/bin/js

load( '.../lib/mimis/js' )

var xls = mimis.load( '.../lib/mimis/xls/rhino' )
var neo4j = mimis.load( '.../lib/mimis/neo4j/mimis' )

try {
    var db = new neo4j.Database( 'tmp/xls/neo4j/' )

    var tx = db.mk.tx
    var knowsRel = db.mk.rel( 'knows' )
    try {
        var nodes = [ db.mk.node, db.mk.node ]
        var rel = nodes[0].rel.to( nodes[-1], knowsRel )
    
        nodes[0].prop( 'message', 'Hello, ' )
        nodes[-1].prop( 'message', 'world!' )
        rel.prop( 'message', 'brave neo' )

        db.ref.rel.to( nodes[0], knowsRel )

        var traverser = db.ref.traverse( {
            rel : knowsRel,
        } )
        
        traverser.each( function( node ) {
            console.log( node.prop( 'message' ) )
        } )
        tx.success
    } finally {
        tx.finish
    }

    db.shutdown

    var Connection = java.sql.Connection
    var url = 'jdbc:microsoft:sqlserver://'
    var server = {
        name : 'localhost',
        port : 1433,
        db : 'pubs',
        user : 'user',
        pass : 'password',
    }

    var selectMethod = 'cursor'

    var uri = ( url + server.name + ':' + server.port + ';'
                + 'databaseName=' + server.db + ';'
                + 'selectMethod=' + selectMethod + ';' )

    try {
        java.lang.Class.forName( 'com.microsoft.jdbc.sqlserver.SQLServerDriver' )
        var con = java.sql.DriverManager.getConnection( uri, server.user, server.pass )
        if( con != null ) {
            console.log( 'Connected: ' + uri )

            var meta = con.getMetaData()
            console.log( 'Driver Information:' )
            console.log( "\tDriver Name:" + meta.getDriverName() )
            console.log( "\tDriver Version:" + meta.getDriverVersion() )
            console.log( 'Database Information:' )
            console.log( "\tDatabase Name: " + meta.getDatabaseProductName() )
            console.log( "\tDatabase Version: " + meta.getDatabaseProductVersion() )

            var cats = dm.getCatalogs()
            console.log( 'Avalilable Catalogs:' )
            while( cats.next() ) {
                console.log( "\tCatalog: "+ cats.getString( 1 ) )
            } 
            cats.close()

            con.close()
        }
    } catch( e ) {
        e.printStackTrace()
        console.error( 'Error Connecting: ' + e.getMessage() )
    }

    var sheet = workbook.sheet[ 0 ]

    sheet.rows.each( function( row ) {
        console.log( 'Row #' + row.num )
        row.cells.each( function( cell ) {
            console.log( 'Cell: ' + cell )
        } )
    } )
} catch ( ioe ) {
    console.log( ioe )
}
