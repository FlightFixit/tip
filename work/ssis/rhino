//!/bin/js

print( '►.../work/ssis/rhino' )

// Symlinks don't work in the m$ jvm
if( typeof environment !== 'undefined'
    && environment[ 'os.emulator' ] == 'cygwin' ) {
    load( 'C:\\Program Files\\Mimis\\js' )
}

load( '.../lib/mimis/js' )

;
( function() {
    try {
        var Connection = java.sql.Connection
        var server = mimis.load( '.../work/ssis/server/mimis' )
        
        print( 'typeof server:' + typeof server )

        var DriverManager = java.sql.DriverManager
        var SQLServerDriver = com.microsoft.sqlserver.jdbc.SQLServerDriver
        
        java.lang.Class.forName( 'com.microsoft.sqlserver.jdbc.SQLServerDriver' ).newInstance()
        
        var con = DriverManager.getConnection( server.uri, server.user, server.pass )
        if( con != null ) {
            console.log( 'Connected: ' + server.uri )
            
            var meta = con.getMetaData()
            console.log( 'Driver Information:' )
            console.log( "\tDriver Name:" + meta.getDriverName() )
            console.log( "\tDriver Version:" + meta.getDriverVersion() )
            console.log( 'Database Information:' )
            console.log( "\tDatabase Name: " + meta.getDatabaseProductName() )
            console.log( "\tDatabase Version: " + meta.getDatabaseProductVersion() )
            
            var cats = meta.getCatalogs()
            console.log( 'Avalilable Catalogs:' )
            while( cats.next() ) {
                var cat = cats.getString( 1 )
                console.log( "\t" + cat )
                var tables = meta.getTables( cat, null, null, null )
                while( tables.next() ) {
                    var table = tables.getString( 1 )
                    console.log( "\t\t" + table )
                }
                console.log( "\tCatalog: "+ cats.getString( 1 ) )
            } 
            cats.close()
            con.close()
        }
    } catch ( ioe ) {
        console.log( ioe )
    }

    return

    var neo4j = mimis.load( '.../lib/mimis/neo4j/mimis' )
    print( neo4j )
    var db = new neo4j.Database( 'neo4j/instance/' )
} )()

print( '◄.../work/ssis/rhino' )
