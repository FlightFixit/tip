//!/bin/js

// Symlinks for the m$oft jvm
if( typeof environment !== 'undefined' && environment[ 'os.emulator' ] == 'cygwin' ) {
    load( 'C:\\Program Files\\Mimis\\js' )
}

load( '.../lib/mimis/js' )

;
( function() {
    try {
        var Connection = java.sql.Connection
        var server = mimis.load( '.../work/ssis/server/mimis' )
        
        var DriverManager = java.sql.DriverManager
        var SQLServerDriver = com.microsoft.sqlserver.jdbc.SQLServerDriver
        
        java.lang.Class.forName( 'com.microsoft.sqlserver.jdbc.SQLServerDriver' ).newInstance()
        
        var con = DriverManager.getConnection( server.uri, server.user, server.pass )
        if( con != null ) {
            console.log( 'Connected: ' + server.uri )
            
            var meta = con.getMetaData()
            console.log( 'Driver Information:' )
            console.log( "\tDriver Name:" + meta.getDriverName() )
            console.log( "\tDriver Version:" + meta.getDriverVersion() )
            console.log( 'Database Information:' )
            console.log( "\tDatabase Name: " + meta.getDatabaseProductName() )
            console.log( "\tDatabase Version: " + meta.getDatabaseProductVersion() )
         
            var prefix = 'rpt_competency_ge2013_t'
            var tables = {}
            var stmt = con.createStatement()
            //stmt.executeUpdate( "INSERT INTO rpt_competency_ge2013_node (name) VALUES ('Testing')" )
            ;[ 'func', 'metric', 'node', 'score', 'tree_map' ].each( function( tbl ) {
                stmt.executeUpdate(
                    "IF( NOT EXISTS("
                        + " SELECT * FROM INFORMATION_SCHEMA.TABLES"
                        + " WHERE TABLE_SCHEMA = 'dbo'"
                        + " AND TABLE_NAME = '" + prefix + '_' + tbl + "'"
                        + " ) )"
                        + ' ' + mimis.load( 'tables/' + tbl + '/m$sql' )
                )
            } )

            var pIns = con.prepareCall( "INSERT INTO " + prefix + "_node (name) VALUES (?);"
                                      + ' SELECT @@IDENTITY' )
            function addNode( name ) {
                pIns.setString( 1, name )
                pIns.execute()
                pIns.getMoreResults()
                var rs = pIns.getResultSet()
                var ret
                if( rs != null && rs.next() ) {
                    ret = rs.getInt( 1 )
                    rs.close()
                }
                return ret
            }

            var pTree = con.prepareCall( "INSERT INTO " + prefix + "_tree_map (node_id, child_id) VALUES (?,?);"
                                         + ' SELECT @@IDENTITY' )
            function addChildTo( nodeId, childId ) {
                pTree.setInt( 1, nodeId )
                pTree.setInt( 2, childId )
                pTree.execute()
            }

            var rootId = addNode( '' )

            ;( function storeTree( root, parentId ) {
                if( $.isString( root ) ) {
                    addChildTo( parentId, addNode( root ) )
                } else if( typeof root === 'undefined' ) {
                    console.log( 'undef' )
                } else if( typeof root.each !== 'undefined' ) {
                    root.each( storeTree, parentId )
                } else if( $.isObject( root ) ) {
                    for( childName in root ) {
                        var childId = addNode( childName )
                        addChildTo( parentId, childId )
                        storeTree( root[ childName ], childId )
                    }
                } else {
                    console.log( 'ukn: ' + root )
                }
            } )( mimis.load( 'eson' ), rootId )

            var rs = stmt.executeQuery( 'SELECT id, name FROM rpt_competency_ge2013_t_node' )
            while( rs.next() ) {
                console.log( 'comp: ' + rs.getInt( 1 ) + ': ' + rs.getString( 2 ) )
            }
            rs.close()

            con.close()
        }
    } catch ( ioe ) {
        console.log( ioe )
    }
} )()
