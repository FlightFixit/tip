//!/bin/js

// Symlinks for the m$oft jvm
if( typeof environment !== 'undefined' && environment[ 'os.emulator' ] == 'cygwin' ) {
    load( 'C:\\Program Files\\Mimis\\js' )
}

load( '.../lib/mimis/js' )

;
( function() {
    try {
        var Connection = java.sql.Connection
        var server = mimis.load( '.../work/ssis/server/mimis' )
        
        var DriverManager = java.sql.DriverManager
        var SQLServerDriver = com.microsoft.sqlserver.jdbc.SQLServerDriver
        
        java.lang.Class.forName( 'com.microsoft.sqlserver.jdbc.SQLServerDriver' ).newInstance()
        
        var con = DriverManager.getConnection( server.uri, server.user, server.pass )
        if( con != null ) {
            console.log( 'Connected: ' + server.uri )
            
            var meta = con.getMetaData()
            console.log( 'Driver Information:' )
            console.log( "\tDriver Name:" + meta.getDriverName() )
            console.log( "\tDriver Version:" + meta.getDriverVersion() )
            console.log( 'Database Information:' )
            console.log( "\tDatabase Name: " + meta.getDatabaseProductName() )
            console.log( "\tDatabase Version: " + meta.getDatabaseProductVersion() )
         
            var stmt = con.createStatement()
            var rs = stmt.executeUpdate( "INSERT INTO rpt_competency_ge2013_node (name) VALUES ('Testing')" )
            var rs = stmt.executeQuery( 'SELECT name FROM rpt_competency_ge2013_node' )
            while( rs.next() ) {
                console.log( 'comp: ' + rs.getString( 1 ) )
            }
            rs.close()

            var cats = meta.getCatalogs()
            console.log( 'Avalilable Catalogs:' )
            while( cats.next() ) {
                var cat = cats.getString( 1 )
                console.log( "\t" + cat )
                try {
                    var tables = meta.getTables( cat, null, null, null )
                    while( tables.next() ) {
                        var table = tables.getString( 3 )
                        
                        console.log( "\t\t" + table )
                    }
                    tables.close()
                } catch( ex ) {
                    console.error( ex )
                }
            } 
            cats.close()
            con.close()
        }
    } catch ( ioe ) {
        console.log( ioe )
    }

    ( function printTree( root ) {
        console.log( 'pt: ' + root )
        if( $.isString( root ) ) {
            console.log( 'leaf' )
        } else if( typeof root === 'undefined' ) {
            console.log( 'undef' )
        } else if( typeof root.each !== 'undefined' ) {
            root.each( printTree )
        } else if( $.isObject( root ) ) {
            for( childName in root ) {
                printTree( root[ childName ] )
            }
        } else {
            console.log( 'ukn: ' + root )
        }
    } )( mimis.load( 'eson' ) )
} )()
