// Formats input fields to show a HTML example when not being edited.

$( function() {
    jQuery.expr[':'].focus = jQuery.expr[':'].focus || function( elem ) {
        return elem === document.activeElement && ( elem.type || elem.href )
    }

    var rows = []
    // Interlaces a row object and drupal generated fieldset
    function wrapRow( fieldset, idx ) {
        var $row = $(fieldset)
            .addClass( 'input row' ) 
            .css( { display: 'block', height: '1em', position: 'relative' } )
        var $text = $row.find( '.text input' )
            .css( { width: '100%' } )
        $text.$holder = $('<div/>')
            .css( { postion: 'relative' } )
            .appendTo( $text.parent() ).append( $text )
        var $exe = $('<div/>')
            .css( { position: 'absolute' } )
            .appendTo( $row )

        var isInput = true
        var row = {
            get isInput() { return isInput },
            get empty() { return $text.val() === '' },
            set order() { },                
            set : {
                get $input() {
                    $exe.hide()
                    $text.show()
                    return isInput = true
                },
                get $exe() {
                    if( ! isInput ) { return true }
                    
                    var val
                    if( ! $text.is( ':focus' ) && ( val = $text.val() ) != '' ) {
                        $exe.html( val )
                        $text.hide()
                        $exe.show() //.fadeIn( 'fast' )
                        return ! ( isInput = false )
                    }
                },
            },
        }

        row.set.$exe
        rows.push( row )

        var init = $text.val()
        var $revert = $('<button/>')
            .addClass( 'revert button' )
            .attr( { title: 'Revert' } )
            .click( function( evt ) {
                $text.val( init )
                $revert.toggle( $text.val() != init )
                evt.preventDefault()
            } )
            .text( '↺' )
            .hide()
        $text.before( $revert )

	$revert.hide() // Not hidden @ this point

        var $delete = $('<div/>')
            .addClass( 'delete button' )
            .attr( { title: 'Delete' } )
            .text( '✖' )
            .click( function( evt ) {
                row.set.$input
                $text.val( '' )
                $revert.toggle( $text.val() != init )
                evt.preventDefault()
            } )
        $row.append( $delete )

        // DHSI internal pages run jquery 1.2 which has no toggle(bool)
	$revert.toggle = function( visible ) {
		if( ! visible ) { $revert.hide() }
		else { $revert.show() }
	}
	$delete.toggle = function( visible ) {
		if( ! visible ) { $delete.hide() }
		else { $delete.show() }
	}

        function all$exe() {
            $.each( rows, function( idx, row ) { row.set.$exe } )
        }
        
        $text.bind( 'keyup', function() {
            //console.log( $elem.val() != init, $elem.val(), init )
            $revert.toggle( $text.val() != init )
            $delete.toggle( $text.val() != '' )
        } )

        $exe.bind( 'mouseover', function() {
            all$exe()
            row.set.$input
        } )
        $text.bind( 'mouseout blur', function() { row.set.$exe } )
        $text.bind( 'focus', all$exe )

        return row
    }

    $('.inputlist fieldset fieldset').each( function( idx, elem ) { wrapRow( elem, idx ) } )

    var newCount = 0 // HTTP GET '[]' array passing not ordering correctly in IE
    function addNew( val ) {
        ++newCount
        var $row = $('<fieldset/>')
        var $input = $('<input type="text"/>')
            .attr( {
                //type: 'text', // Occassional "cannot modify attribute" error in chrome
                name: 'messages[new][' + newCount + ']',
            } )
            .appendTo( $('<div/>').addClass( 'form-item' )
                       .appendTo( $row.appendTo( $('.inputlist fieldset') ) ) )
            .bind( 'keyup change', checkForBlanks )
        $input.val( val )
        wrapRow( $row )
    }

    function checkForBlanks() {
        console.log( rows )
        for( var i = 0; i < rows.length; i++ ) {
            if( rows[i].empty ) { return }
        }
        addNew()
    }

    ++newCount
    //$('.inputlist input[name="messages[new][]"]').live()
    $('.inputlist fieldset fieldset:last-child input').each( function() {
        var $input = $(this)
        console.log( $input )
        var name = $input.attr( 'name' )
        $input
            .attr( { name : name.replace( '][', '][' + newCount + '][' ) } )
            .bind( 'keyup change', checkForBlanks )
    } )

    var $url =
        $('<input/>')
        .attr( { type: 'text', name: 'url' } )
        .keyup( function( evt ) {
            if( evt.which == 27 ) {
                $urlDialog.hide()
            }
            if( evt.which == 13 ) {
                $urlDialog.hide()
                
                var url = $(this).val()
                if( url !== '' ) { // $.get '' returns the current page
                    $.get( url,
                           function( data ) {
                               $(data).find( 'ul' ).children().each( function() {
                                   //addNew( $(this).html() ) // Document is XML & has no innerHTML
                                   
                                   var out = ''
                                   $(this).contents().each( function() {
                                       out += ( new XMLSerializer() ).serializeToString( this )
                                   } )
                                   addNew( out )
                               } )
                           } )
                }
            }
        } )
    var $urlDialog =
        $('<div/>')
        .addClass( 'dialog' )
        .append( $('<div/>').addClass( 'background' ) )
        .append( $url )
        .hide()

    $('body').append( $urlDialog )

/* // No UI & doesn't work in IE
    $('.inputlist').append(
        $('<button/>')
            .addClass( 'load button' )
            .text( '✚ Load <ul>' )
            .click( function( evt ) {
                $urlDialog.show()
                evt.preventDefault()
            } )
    )
*/

    $('body').bind( 'keyup keypress',
                    function( evt ) {
                        if( ( evt.which === 12 && evt.ctrlKey && evt.shiftKey )
                            || ( evt.which === 119 /* F8 */ ) ) {
                            $urlDialog.show()
                            $url.focus()
                        }
                    } )

    var $float =
        $('<div/>')
        .addClass( 'floating copy' )
        .css( { position: 'absolute', width: '100%' } )
    var bounds = {
        top: $('.inputlist > fieldset > div').eq(0).offset().top,
        bottom: $('.inputlist').offset().top + $('.inputlist').height(),
    }

    $('body').mousemove( function( evt ) {
        $float.css( { top: Math.max( bounds.top,
                                     Math.min( bounds.bottom,
                                               evt.pageY - bounds.top ) ) } )
        $float.css( {
            top: Math.max( 0,
                           Math.min( $('.inputlist').height() - $float.height() / 2,
                                     evt.pageY - bounds.top + $float.height() / 2 ) )
        } )
    } )

    $('.inputlist > fieldset > div').each( function( idx, div ) {
        var $div = $(div)
            .prepend(
                $('<button/>')
                    .addClass( 'reorder button' )
                    .attr( { title: 'Reorder' } )
                    .text( '↕' )
                    .click( function( evt ) { evt.preventDefault() } )
                    .mousedown( function( evt ) {
                        $float.append( $div.clone() )
                        $div.addClass( 'reordering' )
                    } )
            )
        $('body')
            .mouseup( function( evt ) {
                $float.empty()
                $div.removeClass( 'reordering' )
            } )
    } )
    
    $('.inputlist').css( { position: 'relative' } )
    $float.appendTo( $('.inputlist fieldset') )
} )
