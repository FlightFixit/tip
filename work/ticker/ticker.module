<?php
/**
 * @param path for which we're displaying help
 * @return html help string for the path
 */
function ticker_help( $path ) {
  switch( $path ) {
  case 'admin/help#ticker':
  case 'admin/help':
    $output = file_get_contents( dirname( __FILE__ ) . '/admin/help/xhtml' );
    break;
  }
  return $output;
}

/**
 * @return array of permissions
 */
function ticker_perm() {
    return array( 'administer ticker',
                  'access ticker content' );
}

/**
 * @param string $op = ( 'list' | 'view' | 'save' | 'configure' )
 * @param integer $idx of block
 * @param array $edit only for "save" operation
 */
function ticker_block( $op = 'list', $delta = 0, $edit = array() ) {  
  $block = array();

  switch( $op ) {
  case 'list':
    $block[0]['info'] = t( 'Ticker' );
    break;
  case 'view':
    $block_content = '';
    $today = getdate();

    // midnight a week ago
    $start_time = mktime( 0, 0, 0,
                          $today['mon'], ( $today['mday'] - 7 ), $today['year'] );
    // + 1 day
    $end_time = $start_time + 60 * 60 * 24;

    $query = ( "SELECT nid, title, created" .
               " FROM {node} WHERE created >= '%d'" .
               " AND created <= '%d'" );
    $query = ( "SELECT id, message" .
               " FROM {ticker}" );
    
    //$query_result =  db_query( $query, $start_time, $end_time );
    $query_result =  db_query( $query );
    while( $row = db_fetch_object( $query_result ) ) {
      if( $block_content == '' ) {   
        $block_content .= '<ul>';
      }
      $block_content .= '<li>' . l( $row->message, 'node/' . $row->id ) . '</li>';
    }
    
    $block['subject'] = 'Ticker';
    
    if( $block_content == '' ) {   
      $block['content'] = 'No Content';
    } else {
      $block_content .= '</ul>';
      $block['content'] = $block_content;
    }
  }

  return $block;
}

/**
 * @return array with this module's settings
 */
function ticker_menu() {
    $items = array();
    
    $items['admin/settings/ticker'] = array(
       'title' => 'Ticker Module',
       'description' => 'Administer Ticker Module Messages',
       'page callback' => 'ticker_message',
       'access arguments' => array( 'administer tinker_module' ),
       'type' => MENU_NORMAL_ITEM,
    );
    
    return $items;
}

/**
 * @return array of form data
 */
function ticker_message() {
    $page_content = '';
    
    $page_content .= drupal_get_form( 'ticker_message_form' );
    
    $get_messages = db_query( "SELECT * FROM {ticker} ORDER BY timestamp DESC" );
    if( $get_messages !== false ) {
      $row_count = 1;
      $id = 0;
      $page_content .= '<h2>Ticker Messages</h2>';

      while( $row = db_fetch_array( $get_messages ) ) {
        $page_content .= '<p>';
        foreach( $row as $key => $value ) {
          if( $key == 'id' ) {
            $id = $value;
          }
          if( $key == 'timestamp' ) {
            $value = date( 'F j, Y G:i:s A', $value );
          }
          if( $key == 'message' ) {
            if( strpos( $value, 'eval:' ) !== false && $row_count === 1 ) {
              $value = trim( preg_replace( '/eval:/', '', $value, 1 ) );
              eval( $value );
              drupal_set_message( t( "Executed code:\n" ).strval( $value ) );
              // Only eval once
              db_query( "UPDATE {ticker} SET message = '%s' WHERE id = %d", $value, $id );
            }
            $page_content .= "<br/>\n";
          }
          $page_content .= '<b>' . $key . '</b> = '.htmlspecialchars( strval( $value ) ).'&nbsp;&nbsp;';
        }
        $page_contents .= "</p>\n";
        $row_count += 1;
      }
    }
    
    return $page_content;
}

/**
 * @return array of form data
 */
function ticker_message_form() {
    $get_messages = db_query( "SELECT * FROM {ticker} ORDER BY timestamp DESC" );
    if( $get_messages !== false ) {
      while( $row = db_fetch_array( $get_messages ) ) { 
        $val = ''
        foreach( $row as $key => $value ) {
          $val .= $key;
        }
        $form['ticker_message_' + $row->id] = array(
          '#type' => 'textarea',
          '#type' => 'textfield',
          '#title' => t('Message'),
          '#default_value' => $val . 'w',
          '#cols' => 50,
          '#rows' => 5,
          '#description' => t( 'Enter a test message.  Begin the message with "eval:" to execute PHPcode.' ),
        );
      }
    } else {
        $form['ticker_message'] = array(
          '#type' => 'textarea',
          '#type' => 'textfield',
          '#title' => t('Message'),
          '#default_value' => variable_get( 'ticker_message', 'Default Message' ),
          '#cols' => 50,
          '#rows' => 5,
          '#description' => t( 'Enter a test message.  Begin the message with "eval:" to execute PHPcode.' ),
        );
    }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Message'),
  );
    
  return $form;
}

/**
 * @param form array of this module's settings
 * @param form_state an array that contains this module's settings
 */
function ticker_message_form_validate( $form, &$form_state ) {
  $ticker_message = $form_state['values']['ticker_message'];
  if( isset( $ticker_message ) ) {
    if( !is_string( $ticker_message ) || $ticker_message == '' ) {
      form_set_error( 'ticker_message', t( 'Please enter a test message.' ) );
    }
  }
}

/**
 * @param form an array that contains user data
 * @param form_state an array that contains user data
 */
function ticker_message_form_submit( $form, &$form_state ) {
  $message = $form_state['values']['ticker_message'];
  $exe_query = db_query( "INSERT INTO {ticker} ( timestamp, message ) VALUES( %d, '%s' )",
                         time(), $message );
   
  $last_id = db_last_insert_id( '{ticker}','id' );
  if( $exe_query !== false ) {
    $msg = 'Added message to log: %id';
    $vars = array( '%id' => $last_id );
    watchdog( 'ticker', $msg, $vars, WATCHDOG_INFO );
    drupal_set_message( t('Added message to log: ').strval( $last_id ) );
  } else {
    $msg = 'Could not add message to log: ';
    $vars = array();
    watchdog( 'ticker', $msg, $vars, WATCHDOG_ERROR );
    drupal_set_message( t( 'Could not add message to log.' ) );
  }
  
  $form_state['redirect'] = 'admin/settings/ticker';
}
