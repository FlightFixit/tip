<!DOCTYPE html PUBLIC
  "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Tinges Commons Waypoint</title>
    <script type="application/javascript"><![CDATA[
    ]]></script>
  </head>
  <body>
    <head>
      <h1>Waypoint: Tinges Commons</h1>
      <h2><a href="mailto:Will%20Holcomb%20%3Cwill@dhappy.org%3E">Will Holcomb</a></h2>
      <h2>26 May 2010</h2>
    </head>

    <section>
      <h1>Potential Parties</h1>

      <ul>
        <li>
          <a href="http://adameig.com">Adam Eig</a>
          <ul>
            <li>Role: Steel Sculptor</li>
          </ul>
        </li>
        <li>
          <a href="mailto:detourne@gmail.com">Graham Coreil-Allen</a>
          <ul>
            <li>Role: <a href="http://betterwaverly.org/about/tinges_commons">Tinges Commons</a> Caretaker</li>
          </ul>
        </li>
        <li>
          <a href="mailto:">Adam Eig</a>
          <ul>
            <li>Role: Mechanical Engineer</li>
          </ul>
          
                
    <section>
      <h1>Introduction</h1>

      <p><a href="http://betterwaverly.org/about/tinges_commons">Tinges Commons</a> is a community artspace in <a href="http://betterwaverly.org"><span title="Better Waverly">my neighborhood</span></a>.</p>
      
    <p>The ability to intercept <code>obj.<em>val</em></code> for undefined <em>val</em>s would be incredibly helpful.</p>
    <p>The issue that I am struggling with currently is:</p>
    <pre>var obj = { valueOf : function() { return 3 } }
    console.log( obj )</pre>
    <p>prints <code>3</code> while:</p>
    <pre>var obj = { valueOf : function() { return function() { return 3 } } }
    console.log( obj )</pre>
    <p>prints <code>Object</code>.</p>
    <p><code>valueOf</code> must return a primitive type or it is not evaluated.</p>
  </body>
</html>
