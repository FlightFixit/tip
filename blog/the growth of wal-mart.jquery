( function() {
    var $current = $('body').children().last()

    $( function() {
        var $container = 
            $('<div/>')
            .css( {
                height : '500px',
                width : '900px',
                margin : 'auto',
            } )
        var $map =
            $('<div/>')
            .css( {
                height : '100%',
                'margin-bottom' : '1.5em',
            } )
        $container.append( $map )

        var $slider =
            $('<div/>')
            .slider()
        $container.append( $slider )
                           
        $current.after( $container )
    
        var geocoder = new google.maps.Geocoder()
    
        var mapOptions = {
            zoom : 4,
            mapTypeId : google.maps.MapTypeId.ROADMAP,
        }
        var map = new google.maps.Map( $map.get(0), mapOptions )
    
        var address = 'United States'
        geocoder.geocode( { address : address }, function( results, status ) {
            if( status == google.maps.GeocoderStatus.OK ) {
                map.setCenter( results[0].geometry.location, 4, google.maps.MapTypeId.ROADMAP )
            } else {
                console.log( 'Geocode was not successful for the following reason: ' + status )
            }
        } )

        var loc = google.loader.ClientLocation
        placeMarker( loc, 'Current Location' )
        
        function placeMarker( pos, title, infowin ) {
            pos = new google.maps.LatLng( pos.latitude, pos.longitude )
            var marker = new google.maps.Marker( {
                position : pos,
                map : map,
                title : title,
            } )
            if( infowin ) {
                infowin.isOpen = false
                var opener = infowin.open
                infowin.open = function() {
                    opener.apply( this, arguments )
                    infowin.isOpen = true
                }
                var closer = infowin.close
                infowin.close = function() {
                    closer.apply( this, arguments )
                    infowin.isOpen = false
                }
                google.maps.event.addListener( marker, 'click', function() {
                    if( !infowin.isOpen ) {
                        infowin.open( map, marker )
                    } else {
                        infowin.close()
                    }
                } )
                // Has no effect
                google.maps.event.addListener( infowin, 'click', function() {
                    infowin.close()
                } )
                $(infowin.getContent()).click( function() {
                    infowin.close()
                } )
            }
        }
        
        function markAddress( address, title ) {
            geocoder.geocode( { address : address }, function( results, status ) {
                if( status == google.maps.GeocoderStatus.OK ) {
                    var pos = results[0].geometry.location
                    pos.__defineGetter__( 'latitude', function() { return pos.lat } )
                    pos.__defineGetter__( 'longitude', function() { return pos.long } )
                    placeMarker( pos )
                } else {
                    console.log( 'Geocode was not successful for the following reason: ' + status )
                }
            } )
        }
        
        var mql = [ {
            id : '/en/wal-mart',
            type : '/organization/organization',
            locations: [ {
                name : null,
                opening_date : null,
                'mail:address' : {
                    //index : null,
                    //sort : 'index',
                    citytown : {
                        name : null,
                        optional : true
                    },
                    postal_code : {
                        name : null,
                        optional : true
                    },
                    state_province_region : {
                        name : null,
                        optional : true
                    },
                    street_address: {
                        lang : '/lang/en',
                        optional : true,
                        type : '/type/text',
                        value : null
                    },
                    type : '/location/mailing_address',
                },
                'geo:address' : {
                    type :  '/location/location',
                    geolocation : {
                        latitude :  null,
                        longitude : null,
                    },
                },
            } ],
        } ]
        
        var query_envelope = { query : mql }
        var service_url = 'http://api.freebase.com/api/service/mqlread'
        
        $.getJSON( service_url + '?callback=?',
                   { query : JSON.stringify( query_envelope ) },
                   function( data ) {
                       console.log( data )
                       $(data.result[0].locations).each( function( idx, location ) {
                           var pos = location[ 'geo:address' ].geolocation

                           var $info = $('<div/>').addClass( 'info' )
                           $info.append( $('<h1/>').text( location.name ) )
                           var $props
                           $info.append( $props = $('<ul/>') )

                           var addr = location[ 'mail:address' ]

                           $props.append( $('<li/>').text( addr.street_address.value ) )
                           $props.append( $('<li/>')
                                          .text( addr.citytown.name
                                                 + ', ' + addr.state_province_region.name
                                                 + ' ' + addr.postal_code.name ) )

                           var infowin = new google.maps.InfoWindow( {
                               content : $info.get(0),
                           } )

                           placeMarker( pos, location.name, infowin )
                       } )
                   } )
    } )
} )()
