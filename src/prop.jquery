(function($) {
    $.fn.prop = function(name) {
        // jQuery objects only hold DOM elements
        var out = new AttrList();

        // Process the incoming jquery list
        $(this).each(function(idx, elem) {
            out.add({
                ownerElement: elem,
                name: name,
                get value() { return this.ownerElement.getAttribute(name) },
                set value(val) { this.ownerElement.setAttribute(name, val) }
            });
        });
        return out;
    }

    function AttrList() {
        var attrs = [];
        this.__defineGetter__('length', function() { return attrs.length });

        this.add = function( attr ) {
            attrs.push(attr);
        }

        this.each = function( callback ) {
            $.each(attrs, callback);
        }

        this.change = function( handler ) {
            this.each(function(idx, attr) {
                var listeners = getListeners(attr);
                handler.attr = attr;
                listeners.push(handler);
            });
        }
    }

    function getListeners(attr) {
        var $parent = $(attr.ownerElement);
        var listenersMap = $parent.data('changeListeners');
        if(!listenersMap) {
            listenersMap = {};
            var trigger = function(event) {
                if(event.newValue != event.prevValue) {
                    var listeners = listenersMap[event.attrName];
                    if(listeners && listeners.length > 0) {
                        $.each(listeners, function(idx, listener) {
                            listener.call(listener.attr, event);
                        });
                    }
                }
            }
            $parent.bind('DOMAttrModified', function(event) {
                trigger(event);
            });
            $parent.data('changeListeners', listenersMap);
        }
        if(!listenersMap[attr.name]) {
            listenersMap[attr.name] = [];
        }
        return listenersMap[attr.name];
    }
})(jQuery)
