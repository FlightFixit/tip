$( function() {
    function buildui() {
        var $content = $('<div/>')
                .css( {
                    overflow : 'auto',
                    width : '100%',
                    height : '100%',
                } )

        // Wait until all libraries are loaded
        if( $content.splitter == undefined
            || $content.dataTable == undefined
            || $.jstree == undefined
            || mimis.list == undefined ) {
            return
        }

        console.log( mimis.get( 'local.hostname' ) )

        var $tree = $('<div/>')
        var $listing = $('<div/>')

        var $table = $('<table/>')
            .css( {
                width : '100%',
            } )

        $content
            .append( $tree )
            .append( $listing.append( $table ) )

        $('body').append( $content )

        var tableCols = [
            { sTitle: 'Name' },
            {
                sTitle: 'Date Modified',
                fnRender : function( obj ) {
                    var date = obj.aData[ obj.iDataColumn ]
                    date = new Date( date )
                    return date.toDateString()
                },
            },
            { sTitle: 'Type' },
            {
                sTitle : 'Size',
                sClass : 'center',
                fnRender : function( obj ) {
                    var size = obj.aData[ obj.iDataColumn ]
                    
                    // From: http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/
                    function number_format( number, decimals, dec_point, thousands_sep ) {
                        var n = number
                        var c = isNaN( decimals = Math.abs( decimals ) ) ? 2 : decimals
                        var d = dec_point == undefined ? '.' : dec_point
                        var t = thousands_sep == undefined ? ',' : thousands_sep
                        var s = n < 0 ? '-' : '';
                        var i = parseInt( n = Math.abs(+n || 0).toFixed( c ) ) + ''
                        var j = ( j = i.length ) > 3 ? j % 3 : 0
 
                        return ( s + ( j ? i.substr( 0, j ) + t : '')
                                 + i.substr( j ).replace( /(\d{3})(?=\d)/g, '$1' + t )
                                 + (c ? d + Math.abs( n - i ).toFixed( c ).slice( 2 ) : '' ) )
                    }

                    var gb = Math.pow( 2, 30 )
                    var mb = Math.pow( 2, 20 )
                    var kb = Math.pow( 2, 10 )
                    if( size >= gb )  {
                        size = number_format( size / gb ) + ' GB';
                    } else if( size >= mb ) {
                        size = number_format( size / mb ) + ' MB';
                    } else if( size >= kb ) {
                        size = number_format( size / kb, 0 ) + ' KB';
                    } else {
                        size = number_format( size, 0 ) + ' B';
                    }
                    return size
                }
            }
        ]
        
        mimis.bind(
            'path.selected',
            function( event, $source ) {
                var id = $source.attr( 'id' )
                var path = $source.attr( 'path' )
                mimis.list( path,
                            function( data ) {
                                if( path.match( '/^file:/' ) ) {
                                    $(list).each( function( idx, elem ) {
                                        table.push( [
                                            elem.name,
                                            elem.modified,
                                            'type',
                                            elem.size
                                        ] )
                                    } )
                                    $table
                                        .dataTable( {
                                            aaData : table,
                                            aoColumns : tableCols,
                                            bPaginate : false, // Disable pagination
                                            bDestroy : true, // Rebuild
                                        } )
                                } else if( path.match( '/^xmpp:/' ) ) {
                                }
                            } )
            } )

        // Called before a jstree element is expanded
        function treedata( obj, callback ) {
            var listing;
            if( obj == -1 ) { // The default
                listing = [
                    {
                        data : 'Local',
                        attr : {
                            id : 'mimis.local',
                            path : 'file:',
                            title : 'Browse',
                        },
                        children : [ 'placeholder' ],
                    },
                    {
                        data : 'Remote',
                        attr : {
                            id : 'mimis.remote',
                            path : 'xmpp:',
                            title : 'Connect',
                        },
                        children : [ 'placeholder' ],
                    },
                ]
                callback( listing )
            } else {
                var id = obj.attr( 'id' )
                var path = obj.attr( 'path' )

                mimis.list( path,
                            function( list ) {
                                listing = []
                                $(list).each( function( idx, elem ) {
                                    listing.push( {
                                        data : elem.name,
                                        attr : { path : path + elem.name },
                                        children : [ 'placeholder' ],
                                    } )
                                } )
                                callback( listing )
                            } )
            }
        }
        
        // From: http://groups.google.com/group/jquery-dev/browse_thread/thread/86504e9660e893ef
        $.fn.equals = $.fn.equals || function( compareTo ) {
            if( !compareTo
                || !compareTo.length
                || this.length != compareTo.length ) { 
                return false
            }
            for( var i = 0; i < this.length; i++ ) { 
                if( this[i] !== compareTo[i] ) {
                    return false
                }
            }
            return true
        }

        var $lastSelected
        $tree
            .css ( {
                overflow : 'auto',
                width: '15%',
            } )
            .bind( 'open_node.jstree',
                   function( event, data ) {
                       var $selected = data.rslt.obj
                       $tree.jstree( 'refresh', $selected )
                   } )
            .bind( 'select_node.jstree',
                   function( event, data ) {
                       var $selected = data.rslt.obj
                       if( $selected.equals( $lastSelected ) ) {
                           $tree.jstree( 'toggle_node', $selected )
                       }
                       $lastSelected = $selected
                       mimis.trigger( 'path.selected',
                                      [ $selected ] )
                   } )
            .bind( 'hover_node.jstree',
                   function( event, data ) {
                       var active = data.rslt.obj
                       var display
                       var attrs = [ 'title', 'id', 'path' ]
                       do {
                           // display = active.attr( attrs.dequeue() )
                           display = active.attr( attrs.shift() )
                       } while( ( display == undefined || display == '' )
                                && attrs.length > 0 )
                       window.status = display
                       event.preventDefault()
                   } )
            .jstree( {
                json_data : {
                    data : treedata,
                },
                'progressive_render' : true,
                'plugins' : [ 'themes', 'json_data', 'ui' ],
            } )

        $listing.css( {
            overflow : 'auto',
        } );

        ( function() {
            var username;
            var password;
            mimis.merge( {
                xmpp : {
                    get username() {
                        if( username == undefined ) {
                            $.get( 'form/login/html',
                                   function( data ) {
                                       console.log( data )
                                       var $loginform = $(data);
                                       $loginform.bind( 'submit',
                                                        function( event ) {
                                                            username =
                                                                $loginform.find( 'input[type="username"]' ).val()
                                                            password = 
                                                                $loginform.find( 'input[type="username"]' ).val()
                                                            event.preventDefault()
                                                        } )
                                       $table.append( $loginform )
                                   } )
                        }
                        return username
                    },
                    get password() {
                        return password
                    },
                }
            } )
        } )()

        $content.splitter( {
            type: 'v',
            outline: false,
            sizeLeft: $tree.width(),
            minLeft: 100,
            minRight: 100,
            resizeToWidth: true,
            dock: 'left',
            dockSpeed: 200,
            //cookie: "docksplitter",
            dockKey: 'Z',// Alt-Shift-Z in FF/IE
            accessKey: 'I'// Alt-Shift-I in FF/IE
        } )

        // Added by splitter
        $('.vsplitbar')
            .css( {
                width : '5px',
                'background-color' : '#cab',
            } )
    }
    $('head')
        .append(
            // This could run in parallel
            $('<script/>')
                .attr( {
                    type : 'application/javascript',
                    src : 'mimis.jquery',
                } )
                .bind( 'load', buildui )
        )
        .append(
            $('<script/>')
                .attr( {
                    type : 'application/javascript',
                    src : 'http://methvin.com/splitter/splitter.js',
                } )
                .bind( 'load', buildui )
        )
        .append(
            $('<script/>')
                .attr( {
                    type : 'application/javascript',
                    src : '.../lib/jquery-jstree/jquery.jstree.js',
                } )
                .bind( 'load', buildui )
        )
        .append(
            $('<script/>')
                .attr( {
                    type : 'application/javascript',
                    src : 'http://www.datatables.net/release-datatables/media/js/jquery.dataTables.js',
                } )
                .bind( 'load', buildui )
        )

    $(document.documentElement)
        .bind( 'mimis.load', buildui )
} )
