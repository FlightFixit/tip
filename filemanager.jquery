$( function() {
    function buildui() {
        var $tree = $('<div/>')
        var $listing = $('<div/>')
        var $content = 
            $('<div/>')
                .append( $tree )
                .append( $listing )
                .css( {
                    overflow : 'auto',
                    width : '100%',
                    height : '100%',
                } )

        // Wait until all 3 libraries are loaded
        if( $content.splitter == undefined
            || $.jstree == undefined
            || tip.mimis.instance == undefined ) {
            return
        }

        $('body').append( $content )

        // Called before a jstree element is expanded
        function treedata( obj, callback ) {
            var listing;
            if( obj == -1 ) { // The default
                listing = [
                    {
                        data : 'Local',
                        attr : { id : '' },
                        children : [ 'placeholder' ],
                    },
                    {
                        'attr' : { 'id' : 'li.node.id' },
                        'data' : {
                            'title' : 'Remote',
                            'attr' : { 'href' : '#' }
                        }
                    }
                ]
            } else {
                var id = obj.attr( 'id' )
                var list = tip.mimis.instance.list( id )
                console.log( list )
                listing = []
                $(list).each( function( idx, elem ) {
                    listing.push( {
                        data : elem.name,
                        attr : { id : id + elem.name },
                        children : [ 'placeholder' ],
                    } )
                } )
            }
            callback( listing )
        }
        
        var i = 0
        $tree
            .css ( {
                overflow : 'auto',
                width: '15%',
            } )
            .bind( 'open_node.jstree',
                   function( event, data ) {
                       $tree.jstree( 'refresh', data.rslt.obj )
                   } )
            .bind( 'load_node.jstree',
                   function( event, data ) {
                       if( event ) {
                           //console.log( 'load:' + this )
                       }
                   } )
            .jstree( {
                json_data : {
                    data : treedata,
                },
                'progressive_render' : true,
                'plugins' : [ 'themes', 'json_data' ],
            } )

        $content.splitter( {
            type: 'v',
            outline: false,
            sizeLeft: $tree.width(),
            minLeft: 100,
            minRight: 100,
            resizeToWidth: true,
            dock: 'left',
            dockSpeed: 200,
            //cookie: "docksplitter",
            dockKey: 'Z',// Alt-Shift-Z in FF/IE
            accessKey: 'I'// Alt-Shift-I in FF/IE
        } )

        // Added by splitter
        $('.vsplitbar')
            .css( {
                width : '5px',
                'background-color' : '#cab',
            } )
    }
    $('head')
        .append(
            // This could run in parallel
            $('<script/>')
                .attr( {
                    type : 'application/javascript',
                    src : 'mimis.jquery',
                } )
                .bind( 'load', buildui )
        )
        .append(
            $('<script/>')
                .attr( {
                    type : 'application/javascript',
                    src : 'http://methvin.com/splitter/splitter.js',
                } )
                .bind( 'load', buildui )
        )
        .append(
            $('<script/>')
                .attr( {
                    type : 'application/javascript',
                    src : '.../lib/jquery-jstree/jquery.jstree.js',
                } )
                .bind( 'load', buildui )
        )
        .bind( 'mimis.load', buildui )
} )
