var BindException = java.net.BindException
var InetAddress = java.net.InetAddress
var NetworkInterface = java.net.NetworkInterface
var Inet4Address = java.net.Inet4Address
var Enumeration = java.util.Enumeration
var FileHandler = java.util.logging.FileHandler
var Handler = java.util.logging.Handler
var Level = java.util.logging.Level
var Logger = java.util.logging.Logger
var SimpleFormatter = java.util.logging.SimpleFormatter

var DiscoveryTest = Packages.je.javawi.jstun.test.DiscoveryTest

var $log = $('<ol id="ip"/>').addClass( 'log' )

function DiscoveryTestDemo( iaddress ) {
    function run() {
	try {
	    var test = new DiscoveryTest( iaddress, 'jstun.javawi.de', 3478 )
	    //DiscoveryTest test = new DiscoveryTest(iaddress, "stun.sipgate.net", 10000);
	    // iphone-stun.freenet.de:3478
	    // larry.gloo.net:3478
	    // stun.xten.net:3478
	    // stun.sipgate.net:10000
	    $log.append( $('<li/>').text( test.test() ) )
	} catch( be ) {
	    $log.append( $('<li/>').text( iaddress.toString() + ": " + be ) )
	}
    }
}

try {
    var fh = new FileHandler( 'logging.txt' )
    fh.setFormatter( new SimpleFormatter() )
    Logger.getLogger( 'de.javawi.jstun' ).addHandler( fh )
    Logger.getLogger( 'de.javawi.jstu' ).setLevel( Level.ALL )
			
    var ifaces = NetworkInterface.getNetworkInterfaces();
    while( ifaces.hasMoreElements() ) {
	var iface = ifaces.nextElement()
	var iaddresses = iface.getInetAddresses()
	while( iaddresses.hasMoreElements() ) {
	    var iaddress = iaddresses.nextElement()
	    if( ( ! iaddress.isLoopbackAddress() ) && ( ! iaddress.isLinkLocalAddress() ) ) {
		var thread = new Thread( new DiscoveryTestDemo( iaddress ) )
		thread.start()
	    }
	}
    }
} catch( e ) {
    $log.append( $('<li/>').text( e ) )
}
