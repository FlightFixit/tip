// The radius scale for the centroids.
var r = ( d3.scale.sqrt()
          .domain( [0, 1e6] )
          .range( [0, 10] ) )

// Our projection.
var xy = d3.geo.albersUsa()

var svg = ( d3.select("body")
            .append("svg:svg")
            .attr( {
                width : '100%',
                height : '100%',
                viewBox : [0, 0, 1000, 500].join( ' ' ),
            } ) )
svg.append("svg:g").attr("id", "states")
svg.append("svg:g").attr("id", "state-centroids")

d3.json(".../geo/usa/state/json", function(collection) {
  svg.select("#states")
    .selectAll("path")
      .data(collection.features)
    .enter().append("svg:path")
      .attr("d", d3.geo.path().projection(xy))
})

d3.json(".../geo/usa/state/centroid/json", function(collection) {
  svg.select("#state-centroids")
    .selectAll("circle")
      .data(collection.features
      .sort(function(a, b) { return b.properties.population - a.properties.population }))
    .enter().append("svg:circle")
      .attr("transform", function(d) { return "translate(" + xy(d.geometry.coordinates) + ")" })
      .attr("r", 0)
    .transition()
      .duration(1000)
      .delay(function(d, i) { return i * 50 })
      .attr("r", function(d) { return r(d.properties.population) });
})
