// Avoid check for null body

document.body || (
    document.__defineGetter__( 'body', function() { return document.documentElement } )
)

// Add array iterator
Array.prototype.each = Array.prototype.each || function each( f, args ) {
  if( typeof f == 'function' ) {
    for( var i = 0; i < this.length; i++ ) {
      ( function( item, args ) {
        f.apply( this, [ item, i, args ] )
      } ).apply(
        this,
        [ this[i], args ]
      )
    }
  }
}

if( NodeList.prototype != null ) {
    NodeList.prototype.each = NodeList.prototype.each || Array.prototype.each
}

if( NamedNodeMap.prototype != null ) {
    NamedNodeMap.prototype.each = NamedNodeMap.prototype.each || function( f ) {
        Array.prototype.each.apply( this, [ function( attr, idx ) {
            f.apply( attr, [ attr.nodeValue, attr.name ] )
        } ] )
    }
}

;( function() {
    // Location of jQuery script
    var JQUERY_LIB = 'https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js'
    JQUERY_LIB = '.../lib/jquery/js'
  
    // Extract namespaces
    var ns = ( function() {
        var ns = {}
        document.documentElement.attributes.each( function( ) {
            if( match = /^(?:xmlns:?)(.*)/.exec( this.nodeName ) ) {
                var name = match[1] || ''
                ns[ name ] = this.nodeValue
            }
        } )
        ns.toString = function() { return ns[''] }
        return ns
    } )()


    // Return a reasonable result for requested test div
    //
    // Avoid: jquery.js:1099
    // Chrome: Uncaught TypeError: Cannot set property 'display' of null
    var script

    console.log( ns[''] )

    if( ns[''] == '' || ns[''] == 'http://www.w3.org/1999/xhtml' ) {
        script = document.createElement( 'script' )
        script.setAttribute( 'src', JQUERY_LIB )
    } else { // jQuery relies on creating a div for internal testing
        var createElement = document.createElement
        document.createElement = function( name ) {
            var ret
            if( name == 'div' ) {
                ret = document.createElementNS( 'http://www.w3.org/1999/xhtml', name )
            }
            return ret || createElement.apply( this, arguments )
        }

        script = document.createElementNS( ns, 'script' )
        script.setAttributeNS( ns[ 'xlink' ], 'xlink:href', JQUERY_LIB )
    }
    script.setAttribute( 'type', 'text/javascript' )

    // Find the current script
    var scripts = document.getElementsByTagName( 'script' )
    var current = scripts[ scripts.length - 1 ]
    current.parentNode.appendChild( script )
} )()
