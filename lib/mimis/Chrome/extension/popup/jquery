$( function() {
    var $body = $body || $('body')
    var links =
        $.extend( {},
                  links,
                  mimis.links,
                  mimis.load( $('link[rel="mimis link list"]').attr( 'href' ) ) )
    
    links.initial.each( function( link ) {
        $body.append(
            $('<object/>')
                .attr( $.extend
                       ( link, 
                         {
                             class : 'icon',
                             type : 'image/svg+xml',
                             data : chrome.extension.getURL( link.icon ),
                         } ) ) )
            .bind( {
                load : function() { console.log( 'loaded' ) },
            } )
    } )

    var $status =
        $('<input/>')
        .attr( {
            id : 'status',
            type : 'text',
        } )
        .appendTo( $body )
        .bind( {
            keyPress : function() {
            },
        } )

    ;( function() {
        var statûs = $status.history = []
        var binder = arguments.callee
        var activeImage
        $('object[class~="icon"]')
            .each( function( idx ) {
                // Load event does not fire on <object/>
                if( idx == 0
                    && ( this.contentDocument instanceof HTMLDocument // Fails
                         || this.contentDocument.documentElement instanceof HTMLHtmlElement // Fails
                         || this.contentDocument.documentElement.localName == 'html' ) ) {
                    setTimeout( binder, 100 )
                    return false
                }
                
                $(document).bind( {
                    mouseover : function() {
                        var pop = statûs.pop()
                        if( pop !== undefined ) {
                            $status.val( pop )
                        }
                        activeImage = undefined
                    },
                } )

                var $obj = $(this)
                $(this.contentDocument).bind( {
                    // mouseenter : // Doesn't work
                    // mouseleave : // Doesn't work
                    mouseover : function() {  // Fires repeadedly
                        if( activeImage != this ) {
                            statûs.push( $status.val() )
                            $status.val( $obj.attr( 'title' ) )
                            activeImage = this
                        }
                    },
                    mousedown : function() {
                        $obj.addClass( 'clicking' )
                    },
                    mouseup : function() {
                        $obj.removeClass( 'clicking' )
                    },
                    click : function() {
                        self.close()
                    },
                    // mouseout : function() { // Fires repeadedly
                }  )
            } )
    } )()
        
    var uri = mimis.uri

    if( uri == undefined ) {
        mimis.notify( {
            icon : 'logo/svg',
            message : 'mimis.uri is not defined',
            href : 'options/xhtml.xhtml',
        } )
    }

    // ToDo: Check against applet registered with background
    chrome.tabs.getAllInWindow( undefined, function( tabs ) {
        if( ! tabs.each( function( tab ) {
            if( tab.url.startsWith( uri ) ) {
                chrome.tabs.update( tab.id, {
                    // ToDo: Flash favicon
                } ) 
                return true
            }
        } ) ) {
            console.log( 'Opening: ' + uri )
            chrome.tabs.create( {
                url : uri,
                selected : false,
                pinned : true,
            }, function( tab ) {
            } )
        }
    } )
} )

/*
chrome.tabs.executeScript( null, {
    file : '',
} )
*/
        
chrome.browserAction.setBadgeText( {
    text : '#',
} )

;( function() {
    var i = 0
    window.setInterval( function() {
        chrome.browserAction.setBadgeBackgroundColor( {
            color : [ Math.round( Math.random() * 255 ),
                      Math.round( Math.random() * 255 ),
                      Math.round( Math.random() * 255 ),
                      Math.round( Math.random() * 255 ) ],
        } )
    }, 3000 )
} )()
