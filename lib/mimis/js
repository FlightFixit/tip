mimis = typeof mimis !== 'undefined' ? mimis : {}

if( mimis.__lookupGetter__( 'id' ) === undefined ) {
    mimis.__defineGetter__( 'id', function() {
        return ( ( Math.random() * Number.MAX_VALUE )
                 .toString( 36 )
                 .substring( 0, 10 ) )
    } )
}

if( mimis.__lookupGetter__( 'out' ) === undefined ) {
    mimis.__defineGetter__( 'out', function() {
        var File = java.io.File
        //var store = File.createTempFile( 'mimis.out.', '.log' )
        var store = new File( '.mimis.out.' + mimis.id + '.log' )
        var jOut = new java.io.FileOutputStream( store )
        return {
            get stream() {
                return jOut
            },
            toString : function() {
                return readFile( store.getName() )
            },
        }
    } )
}
    
mimis.deref = mimis.deref ||
    function( link ) {
        if( typeof environment === 'undefined'
            || environment[ 'os.emulator' ] != 'cygwin' ) {
            return link
        }
        var out = mimis.out
        runCommand( 'cygpath', '-w', link,
                    { output : out.stream } )
        var path = out.toString()
        return path.substring( 0, path.length - 1 )
    }

( function() {
    function inDOM() { // Running in a web browser
        function mkscript( href ) {
            var ns = document.documentElement.getAttribute( 'xmlns' )
            var elem = document.createElementNS( ns, 'script' )
            
            elem.setAttribute( 'type', 'application/javascript' )
            elem.setAttribute( 'src', href )
            elem.setAttributeNS( 'http://www.w3.org/1999/xlink', 'xlink:href', href )
            
            return elem
        }

        var scripts = [ '.../lib/jquery/js', '.../lib/mimis/jquery', 'mimis', ]
        var insPoint = document.documentElement.lastChild // Will fail when nested

        ;( function loadNext() {
            if( scripts.length > 0 ) {
                var elem = mkscript( scripts.shift() )
                elem.addEventListener( 'load',
                                       function() {
                                           //console.debug( 'Loaded: ' + this.href )
                                           loadNext.apply( this, arguments )
                                       },
                                       true )
                
                if( insPoint.nextSibling ) {
                    insPoint.parentNode.insertBefore( elem, insPoint.nextSibling )
                } else {
                    insPoint.parentNode.appendChild( elem )
                }
                insPoint = elem
            }
        } )()
    }
    
    function inJVM() { // Running in Rhino
        console.log( '!!' )
        load( mimis.deref( '.../lib/mimis/jquery' ) )
    }

    if( typeof document !== 'undefined' ) { inDOM() }
                                     else { inJVM() }
} )()
