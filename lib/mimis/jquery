String.prototype.startsWith = String.prototype.startsWith || function( str ) {
    return this.indexOf( str ) == 0
}

var mimis = mimis || {}

mimis.bind = mimis.bind || function( name, listener ) {
    $(window).bind( 'mimis.' + name, listener )
}

mimis.unbind = mimis.unbind || function( name, listener ) {
    $(window).unbind( 'mimis.' + name, listener )
}

mimis.trigger = mimis.trigger || function( name, extra ) {
    $(window).trigger( 'mimis.' + name, extra )
}

localStorage.mimis = localStorage.mimis || mimis || {}

mimis.__defineGetter__( 'uri', function() {
    var mimis_uri = mimis_uri || 'agent/cache/xhtml.xhtml'
    return ( localStorage.mimis.uri
             || ( chrome && chrome.extension
                  ? chrome.extension.getURL( mimis_uri )
                  : 'http://mimis.dhappy.org/' + mimis_uri ) )
} )

mimis.__defineSetter__( 'uri', function( uri ) {
    return localStorage.mimis.uri = uri
} )

if( webkitNotifications.__lookupGetter__( 'allowed' ) === undefined ) {
    webkitNotifications.__defineGetter__(
        'allowed',
        function() {
            webkitNotifications.ALLOWED = webkitNotifications.ALLOWED || 0
            return webkitNotifications.checkPermission() == webkitNotifications.ALLOWED
        } )
}

mimis.notify = mimis.notify ||
    function( config ) {
        $.extend( true, config, {
            icon : 'icon/48/png',
            title : 'MÃ¯mis',
            message : ( 'You are being notified by: '
                        + arguments.caller.name ),
            timeout : 10000,
        } )
        
        console.log( config )

        if( webkitNotifications.checkPermission() == webkitNotifications.PERMISSION_ALLOWED ) {
            with( config ) {
                var notification =
                    webkitNotifications.createNotification(
                        icon,
                        title,
                        message )
                notification.show()
                if( timeout ) {
                    setTimeout( function() {
                        notification.cancel()
                    }, timeout )
                }
            }
        }
    }

mimis.get = mimis.get ||
    function( store, varName ) {
        var parts = varName.split( /[,\/]/ )
        if( parts.each( function( part ) {
            if( store[ part ] === undefined ) {
                return false
            } else {
                store = store[ part ]
            }
        } ) ) {
            return store
        }
    }

mimis.set = mimis.set ||
    function( store, varName, val ) {
        var ret = store
        var parts = varName.split( /[,\/]/ )
        var ultimate = parts.pop()
        parts.each( function( part ) {
            if( store[ part ] === undefined ) {
                store[ part ] = {}
            }
            store = store[ part ]
        } )
        store[ ultimate ] = val
        return ret
    }
