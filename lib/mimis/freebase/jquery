var world = {}

function fillObject( object, path ) {
    $.each( path, function( index, prop ) {
        if( ! object[ prop ] ) {
            object[ prop ] = {}
        }
        object = object[ prop ]
    } )
}

function loadAward( awardName, type, freebaseId ) {
    var query = [ {
        'id|=': [ freebaseId ],
        type: '/award/award',
        category: [ {
            name: null,
            winners: [ {
                award_winner: [ { name: null } ],
                year: null,
                honored_for: [ {
                    name: null,
                } ],
                limit: 5000,
            } ],
            nominees: [ {
                award_nominee: [ { name: null } ],
                year: null,
                nominated_for: [ {
                    name: null,
                } ],
                limit: 5000,
            } ]
        } ]
    } ]

    var query_envelope = { query: query }
    var service_url = 'http://api.freebase.com/api/service/mqlread'
    var url = service_url  + '?callback=?&query=' + encodeURIComponent( JSON.stringify( query_envelope ) )
    service_url = 'https://www.googleapis.com/freebase/v1/mqlread'
    url = service_url  + '?query=' + JSON.stringify( query )

    $.getJSON( url, function( response ) {
        console.log( response )
        response.result.map( function( award ) {
            award.category.map( function( cat ) {
                var category = cat.name.replace( awardName + ' Award for ', '' )
                $.each( cat.winners, function( index, winner ) {
                    var author = winner.award_winner[0].name
                    var title = winner.honored_for[0].name
                    var year = winner.year
                    fillObject( world, [ type, 'by', author, title ] )
                    fillObject( world, [ type, 'year', year, author, title ] )
                    fillObject( world, [ type, 'award', awardName, year, category, 'winner', author, title ] )
                } )
                $.each( cat.nominees, function( index, nominee ) {
                    var author = nominee.award_nominee[0].name
                    var title = nominee.nominated_for[0].name
                    var year = nominee.year
                    fillObject( world, [ type, 'by', author, title ] )
                    fillObject( world, [ type, 'year', year, author, title ] )
                    fillObject( world, [ type, 'award', awardName, year, category, 'nominee', author, title ] )
                } )
            } )
            return award.category.name
        } )
        $('#world').trigger( 'update' )
    } )
}

// After all data sets are loaded, update the tree
( function() {
    var updateCount = 0
    $('#world').on( 'update', function() {
        if( ++updateCount >= 2 ) {
            var $parent = $('#world ~ ol')
            $parent.empty()
            addObject( world, $parent )
        }
    } )
} )()

loadAward( 'Hugo', 'book', '/en/hugo_award' )
loadAward( 'Nebula', 'book', '/en/nebula_award' )
//loadAward( 'Academy', 'movie', '/en/academy_awards' )
