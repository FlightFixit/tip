#!/bin/bash

#ToDo: Add getopt

HASHDIR=".../hashes/sha256/"

ENDPOINT="$MIMIS_ORIGIN"
[ -z "$ENDPOINT" ] && {
    ENDPOINT="$(git remote -v | grep -e "^origin	ssh://.* (push)$" | perl -pe 's|^origin	ssh://(.+?)/.*|\1|')"
}

[ $# == 0 ] && {
    echo "Usage: $0 [file]+"
    echo " Pushes the hashes for a list of files to:"
    echo "    $MIMIS_ORIGIN"
    echo "    A SSH endpoint of git:~/.../"
    echo
    echo " Will call lnhash if a file is not a hash link."
    echo
    echo " find -name ttf -print0 | xargs -0 pushhash"
    [ -n "$ENDPOINT" ] && {
        echo $'\x0A'' $ENDPOINT:'$ENDPOINT
    }
    exit -2
}

[ -z "$ENDPOINT" ] && {
    echo 'Error: No destination server found'
    exit -1
}

for arg in "$@"; do
    LINK="$(readlink "$arg")"
    [[ "$arg" != "$LINK" && ! -e "$arg" ]] && {
        [ -z "$VERBOSE" ] || echo "Skip Broken Link: $arg"
        continue
    }
    [ ! -L "$arg" ] && {
        [ -z "$VERBOSE" ] || echo "Skip Non-link: $arg"
        continue
    }
    
    [ "${LINK#$HASHDIR}" != "$LINK" ] && { # isa hash link
        [ -z "$VERBOSE" ] || {
            echo "Sending: $arg"
        }
        rsync "$LINK" "$ENDPOINT:$LINK"
        continue
    }
    
    [[ "$arg" != "$LINK" && -d "$LINK" ]] && {
        echo "Skipping Dir Link: $arg"
        continue
    }

    [[ "$arg" != "$LINK" && -f "$LINK" ]] && {
        echo "Skipping File Link: $arg"
        continue
    }

    [ "$arg" != "$LINK" ] && {
        echo "Skipping Link: $arg"
        continue
    }

    echo "U"
done

function visitNode() {
    file="$1"
    echo "Visiting: $file"
    [ -L "$file" ] && {
        LINK="$(readlink "$file")"
        [ "${dest#$HASHDIR}" != "$dest" ] && { # isa hash link
            rsync --progress "$LINK" "$DEST:$LINK"
        } || {
            echo "Non-Hash Link: $file $LINK"
        }
        return
    }
    [ -d "$file" ] && {
        pushd "$file" > /dev/null
        for child in *; do
            visitNode "$child"
        done
        popd > /dev/null
        return
    }
    [ ! -e "$file" ] && {
        echo "Íùá: $file"
        return
    }
    echo " Ignoring File: $file"
}
    
# until [ ${#ARGS} == 0 ]; do
#     file="${ARGS[0]}"
#     ARGS="(${ARGS[@]:1})"
#     visitNode "$file"
# done
