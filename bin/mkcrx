#!/bin/bash -e
#

#DEBUG=t

if test $# -ne 2; then
  echo "Pack a Chromium extension directory into crx format"
  echo
  echo "Usage: mkcrx <extension directory> <signing key location>"
  exit 1
fi

dir="$1"
key="$2"
name="$(basename "$dir")"
[ "$name" == "." ] && name="" || name="${name}."
crx="${name}crx"
pub="${name}pub"
sig="${name}sig"
zip="${name}zip"
trap 'rm -f "$pub" "$sig" "$zip"' EXIT

# zip up the crx dir
cwd=$(pwd -P)
[ -n "$DEBUG" ] && echo "Zipping $dir $cwd/$zip"
VERBARG=
[ -n "$DEBUG" ] && VERBARG="-v"
# Even with --exclude ..., it still appears to be traversing the whole tree
#(cd "$dir" && zip -qr -9 -X "$cwd/$zip" .)
(
    cd "$dir" && \
        # I want to traverse all links except ...
        # find -not -name ... -not -name "$zip" -not -name "$crx" -not -name "$key" -follow -print0 | \
    (
        find -not -name ... -not -name .tip -not -name "$zip" -not -name "$crx" -not -name "${key##*/}" -print0
        for dir in $(find -type l -xtype d -not -name ... -not -name .tip -print | sed -e 's/$/\//'); do
            find "$dir" -not -name ... -print0
        done
        # Causes Chrome error
        #find ".../lib/jquery/" -not -name ... -print0
        (
            for file in $(find -name xhtml); do
                xsltproc .../lib/tip/extract/href/xslt "$file" | grep -e '^/\.tip\/'
            done
            [ -e mkcrx/includes ] && cat mkcrx/includes
        ) | \
            sed -ne 's/^\///' -e 'H;${g;s/\n/\x00/g;P}' | \
            tr -d '\n'
        printf '\0'
    ) | \
        xargs -0 zip -q -9 $VERBARG -X - > "$cwd/$zip"
)

# signature
[ -n "$DEBUG" ] && echo "Signing $zip with $key"
openssl sha1 -sha1 -binary -sign "$key" < "$zip" > "$sig"

# public key
[ -n "$DEBUG" ] && echo "Extracting public key to $pub"
openssl rsa -pubout -outform DER < "$key" > "$pub" 2>/dev/null

byte_swap () {
  # Take "abcdefgh" and return it as "ghefcdab"
  echo "${1:6:2}${1:4:2}${1:2:2}${1:0:2}"
}

crmagic_hex="4372 3234" # Cr24
version_hex="0200 0000" # 2
pub_len_hex=$(byte_swap $(printf '%08x\n' $(ls -l "$pub" | awk '{print $5}')))
sig_len_hex=$(byte_swap $(printf '%08x\n' $(ls -l "$sig" | awk '{print $5}')))
(
  echo "$crmagic_hex $version_hex $pub_len_hex $sig_len_hex" | xxd -r -p
  cat "$pub" "$sig" "$zip"
) > "$crx"
[ -n "$DEBUG" ] && echo "Wrote $crx"
