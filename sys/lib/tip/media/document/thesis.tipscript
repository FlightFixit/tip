(function($) {
    $.extend($.expr[':'], { 
        // Filter for a given namespace prefix
        ns: function( elem, i, match ) { 
            var namespace = match[3];
            return ( elem && elem.nodeName &&
                     elem.nodeName.substring( 0, namespace.length + 1 ) == namespace + ':' );
        },
        // Filter for a namespaceless local name
        local: function( elem, i, match ) {
            return elem.localName == match[3];
        }
    });

    $(function() {
        var title = '';
        $.tip.$('thesis:title').each(function(idx, elem) {
            if( $(this).text() != '' ) {
                title = $(this).text();
            } else if( title != '' ) {
                $(this).text(title);
            }

            // Nesting a tag within the header causes it not to display
            if( $(this).parent().get(0).nodeName == 'title' &&
                $(this).parent().parent().get(0).nodeName == 'head' ) {
                // Causes loop to short circuit
                //$(this).parent().clear();
                $(this).parent().text(title);
            }
        });
        
        // The content of css counters is not available for generating cross references
        function number( $elems ) {
            $elems.each(function( idx, elem ) {
                $(elem).data( 'localIdx', idx + 1 );
                number( $(elem).children( elem.nodeName ) );
            });
        }
        number($('body > section'));
        
        var $refs = {};

        // Generate section numbers
        $('section').each(function() {
            // Using .andSelf() puts the origin node at the end of the list
            var indices = $(this).children().eq(0).parents('section').map(function() {
                return $(this).data('localIdx');
            });
            indices = Array.prototype.slice.call( indices ).reverse();
            var counter = indices.join('.');
            $refs[ $(this).attr('id') || counter ] = $(this);
            $(this).data( 'label', counter );
            $(this).children('title').prepend( $('<span class="counter"/>').text( counter ) );
        });

        $('section').each(function() {
            //$(this).children(':ns(thesis)').filter(':local(figure)').each(function(idx, elem) {
            $(this).children('figure').each(function(idx, elem) {
                var counter = $(this).parent().data('label') + '-' + (idx + 1);
                $refs[ $(this).attr('id') || counter ] = $(this);
                var label = 'Figure ' + counter;
                $(this).data( 'label', label );
                $(this).children('caption').prepend(  $('<span class="counter"/>').text( label ) );
            });
        });

        $('figure').filter('[href]').each(function() {
            var href = $(this).attr('href');
            if( ! href[0] == '#' ) {
                throw 'Error: Only local references are supported for linking figures (' + href + ')';
            }
            $(this).replaceWith( $('<a/>').attr( 'href', href )
                                 .text( $refs[href.substring(1)].data('label') ) );
        });

        var acronyms = {};
        
        $('acronym').each(function() {
            var acronym = { abbr: $(this).attr('title'),
                            text: $(this).text() };
            if( acronym.text ) {
                // Assume the shorter string is the abbreviation
                if( acronym.abbr.length > acronym.text.length ) {
                    var temp = acronym.text;
                    acronym.text = acronym.abbr;
                    acronym.abbr = temp;
                }
                acronyms[acronym.abbr.toLowerCase()] = acronym;
                acronyms[acronym.text] = acronym;
            }
        });
        
        var seen = {};
        $('acronym').each(function() {
            var title = $(this).attr( 'title' );
            var text = $(this).text();
            var acronym = acronyms[title] || acronyms[title.toLowerCase()];

            // Is this the first instance?
            if( ! seen[acronym.abbr] ) {
                if( ! text ) {
                    $(this).attr( 'title', acronym.abbr ).text( acronym.text );
                }
                seen[acronym.abbr] = true;
            }
            if( ! text ) {
                $(this).attr( 'title', acronym.text ).text( title );
            }
            $(this).click(function() {
                var title = $(this).attr('title');
                var text = $(this).text();
                $(this).attr( 'title', text ).text( title );
            });
        });
        
        
        $.tip.$('thesis:').each(function(idx, elem) { });

    });
})(jQuery);
