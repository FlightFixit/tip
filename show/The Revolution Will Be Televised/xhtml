<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>The Revolution Will Be Televised</title>
    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
    <link rel="stylesheet" type="text/css" href=".../style/main/css" />
    <style type="text/css">
    </style>
    <link rel="icon" type="image/png" href=".../image/icon/cigarette/png" />
  </head>
  <body>
    <div class="header">
      <h1>The Revolution Will Be Televised</h1>
    </div>

    <p>The idea for this project is pretty straightforward: replace our existing economic and political systems with almost completely transparent computer mediated versions. The process is theoretically simple: record and publish all the operations of an organization then use computers to come up with more efficient systems and obsolesce the current order.</p>

    <p>The business model I am proposing is called an open market. Software codifies business operations and everything except what is necessary to protect consumer privacy is published. Systems are then able to aggregate data across businesses and interact by recommending transactions.</p>

    <p>The combination I want to start with is a chain of <a href="https://github.com/OneAcreCafe/costs">restaurants</a>/<a href="https://github.com/dhappy/housing">hostels</a>. Workers sign up for <a href="https://github.com/dhappy/tour">working tours</a> and the system coordinates the appropriate housing, shifts and rate of pay to make it work.</p>

    <p>The system relies heavily on the master/master replication capabilities of CouchDB. Each business has a pool of globally uniquely identified javascript objects. Those pools can be combined to create composite databases with impunity.</p>

    <p>I am in the design phase currently. I'm trying to figure out just what data needs to be stored. In terms of interfaces there are:</p>

    <ul>
      <li><strong>Order Entry</strong>: Either the customer entering on their device or the server entering on a tablet.</li>
      <li><strong>Kitchen</strong>: Touch screen or tablet with receipt printer. Ticket goes out with the meal to identify the destination.</li>
      <li><strong>Cashier</strong>: Users can pay via a device, but there should also be a cashier.</li>
      <li><strong>Costs</strong>: Inventory and overhead tracking.</li>
      <li><strong>Suppliers</strong>: Organizations providing ingredients.</li>
      <li><strong>Recipes</strong>: I want prices to be computed from costs. Also I want users to be able to import caloric information from their receipt.</li>
    </ul>

    <p>I'm developing the application in Ember. If you are able and interested in helping, join <a href="https://groups.google.com/forum/#!forum/technoanarchy">technoanarchy@googlegroups.com</a>.</p>

    <hr/>

    <h1><cite>2019</cite></h1>
  </body>
</html>
