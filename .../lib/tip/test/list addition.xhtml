<!DOCTYPE html PUBLIC
  "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>List Addition</title>
  <script type="application/javascript" src=".../lib/jquery/jquery.js"/>
  <script type="application/javascript" src=".../lib/tip/Array.each.js"/>
  <script type="application/javascript" src=".../lib/tip/pointers.js"/>
  <script type="application/javascript" src=".../lib/tip/List.js"/>
  <script type="application/javascript" src=".../lib/tip/__.jquery"/>
  <script type="application/javascript"><![CDATA[
      $( function() {
          var list = new List()
          list.__.set( 'test.sublist.name', 'test' )
          var $list = $('<ul/>')
          $.__.$('#').append( $list )
          function lst() {
            this.valueOf = function() {
              return 5
            }
          }
          var test = new lst()
          test.sub = 'sub'
          $list.append( $('<li/>').text( 'test = ' + test ) )
          $list.append( $('<li/>').text( 'test.sub = ' + test.sub ) )
//          $list.append( $('<li/>').text( 'list.test.sublist.name = '
//                                         list.test.sublist.name ) )
      } )
  ]]></script>
</head>
<body>
  <p><em>In progress</em></p>
  <p>Trying to figure out a way to have:</p>
  <pre>list.__.set( 'test.sublist.name', 'test' )</pre>
  <p>set:</p>
  <pre>list.test.sublist.name</pre>
  <p>This issue isn't setting up the object, it is what if someone then wants to have a primitive value for:</p>
  <pre>list.test</pre>
  <p>Having it dereference to a list causes a conflict. Ways to avoid it:</p>
  <ul>
    <li>Throw an exception when overriding part of a path</li>
    <li>Dereference primitives as <code>list.test.sublist.name['']</code></li>
  </ul>
  <p>The ability to intercept <code>obj.<em>val</em></code> for undefined <em>val</em>s would be incredibly helpful.</p>
</body>
</html>
