<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"
[
  <!ENTITY nbsp "&#160;">
]>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>innerHTML in XHTML</title>
    <style type="text/css">
    </style>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"/>
    <script type="text/javascript">//<![CDATA[
      ( function() {
        var elems = [
          HTMLAnchorElement,
          HTMLDivElement,
          HTMLParagraphElement
        ]
        var parser = new DOMParser()
        var entityExp = /&([^ ;]+);/g
        var entities = {}
        $( elems ).each( function( idx, elem ) {
          ( function() {
            var innerHTML = elem.prototype.__lookupSetter__( 'innerHTML' )
            elem.prototype.__defineSetter__( 'innerHTML', function( html ) {
              html = html.replace( entityExp, function( match ) {
                if( entities[ match ] === undefined ) {
                  var doc =
                    parser
                      .parseFromString(
                        ( '<?xml version="1.0" encoding="UTF-8" standalone="no" ?>'
                          + '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" '
                          + '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">'
                          + '<html xmlns="http://www.w3.org/1999/xhtml">' + match + '</html>' ),
                        'text/xml' )
                  var children = doc.documentElement.childNodes
                  entities[ match ] = ( children.length == 1
                                        ? children.item( 0 ).data
                                        : match )
                }
                return entities[ match ]
              } )
              innerHTML.apply( this, arguments )
            } )
          } )()
        } )
      } )()
      $( function() {
        var contents = [
          'tagless test',
          '<em>single tag test</em>',
          '<a href="#"><b>nested tag test</b></a>',
          '<em>sibling</em> tag <em>test</em>',
          '&ldquo;entity&rdquo; test',
          '&ldquo;&unknwn; entity&rdquo; test'
        ]
        $( contents ).each( function( idx, elem ) {
          var $p = $('<p/>')
          try {
            $p.get(0).innerHTML = elem
          } catch( e ) {
            $p.text( 'Error Setting: ' + elem )
          }
          $('body').append( $p )
        } )
      } )
    //]]></script>
  </head>
  <body>
    <p>Tests adding content using <code>node.innerHTML</code>. I'm getting a <acronym title="Document Object Model">DOM</acronym> error when the <a href="http://static.ak.connect.facebook.com/connect.php/en_US/js/Api/CanvasUtil/Connect/XFBML"><acronym title="Extensible Facebook Markup Language">XFBML</acronym> script</a> loads.</p>
    <p>Upon examination, the error <a href="http://stackoverflow.com/questions/4162270/dom-exception-when-assigning-html-entities-to-innerhtml">arises from the &amp;nbsp;</a> in the <acronym title="Extensible Hypertext Markup Language">XHTML</acronym>. It's a <a href="http://bugs.developers.facebook.net/show_bug.cgi?id=5932">known error</a>.</p>
    <p>A possible fix would be the override the <code>innerHTML</code> setter, but those are <a href="http://code.google.com/p/chromium/issues/detail?id=13175">inaccessible in Chrome</a>.</p>
    <hr/>
  </body>
</html>
