<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>Loading Variables Using Continuations</title>
    <style type="text/css">
    </style>
    <script src="http://www.google.com/jsapi?key=ABQIAAAA70e1TrScvoeLHNzMa4BtIBS5CBWw3K3PbugkSJo66gbauGjNKRRIPzVtdxmhAaWS96QCWhtaQjwqIA" type="text/javascript"></script>
    <script type="text/javascript"> google.load("jquery", "1.4") </script>
    <script type="text/javascript">//<![CDATA[
    //]]></script>
  </head>
  <body>
    <h1>Loading Variables Using Continuations</h1>

    <p>Let's say I have a piece of code like this:</p>

    <pre>$('#test').text(var('user/name'))</pre>

    <p>The <code>var</code> function loads the variable <code>user/name</code> either from a local cache or hunts for it on the net.</p>

    <p>I was thinking that perhaps I could use continuations to avoid writing this as:</p>

    <pre>var('user/name', function(val) { $('#test').text(val) })</pre>

    <p>Except the <code>yield</code> method has to return a value and execution continues. That initial return value is what would be used.</p>

    <p>The only way to make this version of <code>var</code> to work is to have the request execute synchronously which would block the program for every request&hellip;</p>

  </body>
</html>
