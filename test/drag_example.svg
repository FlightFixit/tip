<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" version="1.0"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     width="100%" height="100%" viewBox="-10 -10 320 320">
  <title>Drag Example</title>
  <defs>
    <script type="text/javascript">//<![CDATA[
      window.addEventListener('load', function() {
        var doc = document.documentElement;

        var screenCTM = doc.getScreenCTM();
        var clickPoint = doc.createSVGPoint();
        var startPoint;
        var currentPoint = doc.createSVGPoint();
        var dragging = false;

        for(var i = Math.max(4, Math.random() * 10); i >= 1; i--) {
          var rect = document.createElementNS('http://www.w3.org/2000/svg', 'use');
          rect.setAttributeNS('http://www.w3.org/1999/xlink', 'href', '#rect');
          rect.setAttribute('x', Math.random() * 300);
          rect.setAttribute('y', Math.random() * 300);

          var dragListener = function(event) {
            [ currentPoint.x, currentPoint.y ] = [ event.clientX, event.clientY ];
            currentPoint = currentPoint.matrixTransform(screenCTM.inverse());
            var attrs = arguments.callee.attrs;
            [ attrs.x.nodeValue, attrs.y.nodeValue ] =
              [ startPoint.x + (currentPoint.x - clickPoint.x),
                startPoint.y + (currentPoint.y - clickPoint.y) ];
          }
          dragListener.attrs = { x: rect.attributes.getNamedItem('x'),
                                 y: rect.attributes.getNamedItem('y') };

          rect.addEventListener('mousedown', function(event) {
            if(dragging) return;
            [ clickPoint.x, clickPoint.y ] = [ event.clientX, event.clientY ];
            clickPoint = clickPoint.matrixTransform(screenCTM.inverse());
            startPoint = { x: parseFloat(rect.getAttribute('x')),
                           y: parseFloat(rect.getAttribute('y')) };
            doc.setUserData('dragListener', dragListener, null);
          }, false);
          rect.addEventListener('mouseup', function(event) {
            dragging = false;
            doc.setUserData('dragListener', false, null);
          }, false);
          doc.appendChild(rect);
        }
      }, false);
      window.addEventListener('load', function() {
        document.documentElement.addEventListener('mousemove', function(event) {
          var dragListener = this.getUserData('dragListener');
          if(dragListener) {
            dragListener(event);
          }
        }, false);
      }, false);
    //]]></script>
    <style type="text/css">
      rect { stroke: #05296E; fill: #BF8E30; }
    </style>
    <rect id="rect" width="20" height="20"/>
    <circle id="circle" width="20" height="20"/>
  </defs>
</svg>
